setwd('/projectnb2/dmfgrp/Laplacian_EFM')

library(efm)
if (!require("R.matlab")) install.packages("R.matlab")
if (!require("snedata")) install.packages("snedata")
if (!require("MASS")) install.packages("MASS")
if (!require("tidyverse")) install.packages("tidyverse")
if (!require("glmnet")) install.packages("glmnet")

source(file = '/projectnb/dmfgrp/Laplacian_EFM/CVPlot.R')
# [ORL Face]
# data_dir = '/projectnb/dmfgrp/Exponential_Factor_Model/data'
# ORL_datadir = paste(data_dir, '/ORL_64x64.mat', sep ='')
# X<- readMat(ORL_datadir)$fea
# label = readMat(ORL_datadir)$gnd
# batch_size = 128
# q = 7
# [Fashion]
fashion <- download_fashion_mnist()
# first 60,000 instances are the training set
X <- as.matrix(fashion[1:10000, -c(785,786)])
label = fashion[1:10000, 786]
batch_size = 512
q = 3


n = dim(X)[1]
p = dim(X)[2]
phi_star = mean(X)^2/(sd(X)^2 - mean(X))
factor_family = negative.binomial(phi_star)
glm_weights = 1

adam_control = adam.control(max_epoch = 10, batch_size = batch_size,
                            step_size = 1, rho =0.9, abs_tol = 1e-6,
                            beta1 = 0.9, beta2 = 0.999, epislon = 10 ^ -8)
sample_control = sample.control(sample_size = 50, eval_size = 50)

efm_fit = efm(X, factor_family = factor_family, rank = q, glm_weights, algo = 'ps',
              dispersion = phi_star, adam_control = adam_control,
              sample_control = sample_control, eval_likeli = TRUE)

save_name = paste('/projectnb/dmfgrp/Laplacian_EFM/Result/CVFit/Fashion_Epoch',
                  adam_control$max_epoch,
                  '_lr', adam_control$step_size,
                  '_b', adam_control$batch_size,
                  '.RData', sep ='')
save(efm_fit, file = save_name)


# [estimate local variable]
library(plotly)
# test_data = as.matrix(fashion[10001:12000, -c(785,786)])
# test_label = fashion[10001:12000, 786]
test_data = as.matrix(fashion[1:1000, -c(785,786)])
test_label = fashion[1:1000, 786]
test_weights = matrix(1, nrow = dim(test_data)[1], ncol = dim(test_data)[2])
L_test = t(mapply(ridge_coef, asplit(test_data, 1), asplit(test_weights,1), MoreArgs = list(
  Vt =efm_fit$V, factor_family = factor_family)))
mu_test = factor_family$linkinv(tcrossprod(L_test, efm_fit$V))

# [visualize the result]
num_pic = 3
rnum_pixel = sqrt(784)
cnum_pixel = sqrt(784)
plot_cfit(as.tibble(t(efm_fit$V)), rnum_pixel, cnum_pixel, num_pic )
plot_cfit(as.tibble(mu_test), rnum_pixel, cnum_pixel, num_pic )


# [plot]
plot_negbin_emfdf = data.frame(L_test)
plot_negbin_emfdf$label = as.factor(test_label)
plot_ly(plot_negbin_emfdf, x=~X1, y=~X2, z=~X3, type="scatter3d", mode="markers", color=~label,
        marker = list(size = 3)) %>%
  layout(legend = list(orientation = "h",   # show entries horizontally
                       xanchor = "center",  # use center of legend as anchor
                       x = 0.5), margin = list(t = 0, l = 0, r= 0, b =0))



